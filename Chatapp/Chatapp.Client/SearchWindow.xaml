<metro:MetroWindow x:Class="Chatapp.Client.SearchWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:local="clr-namespace:Chatapp.Client"
                   xmlns:data="clr-namespace:Chatapp.Client.Data"               
                   mc:Ignorable="d"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
				   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
				   Background="{DynamicResource MaterialDesignPaper}"
                   DataContext="{Binding Source={StaticResource VMLocator}, Path=SearchVM}"
                   d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type data:SampleMainWindowViewModel}}"
                   Title="Founded friends" Height="300" Width="300" TitleCaps="False" TitleCharacterCasing="Normal" 
                   ShowTitleBar="True" BorderBrush="{DynamicResource PrimaryHueDarkBrush}"
				   >
	<metro:MetroWindow.Resources>
			<Style x:Key="AddButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="FontWeight" Value="Medium"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="#00000000">
							<materialDesign:PackIcon Name="SendIcon" Kind="Add" SnapsToDevicePixels="True"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Margin="{TemplateBinding Padding}" Width="Auto" Height="Auto"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Foreground" TargetName="SendIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter Property="Foreground" TargetName="SendIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.23"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="SearchButtonStyle" TargetType="Button" BasedOn="{StaticResource AddButtonStyle}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="#00000000">
							<materialDesign:PackIcon Name="SearchIcon" Kind="Search" SnapsToDevicePixels="True"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Margin="{TemplateBinding Padding}" Width="Auto" Height="Auto"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Foreground" TargetName="SearchIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter Property="Foreground" TargetName="SearchIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.23"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ParticipantsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="#E3F2FD"/>
								<Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#E3F2FD"/>
								<Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="ParticipantsDataTemplate">
			<Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource MaterialDesignDivider}"
                    Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                    Height="50" Margin="-2,0,0,0">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="5"/>
						<ColumnDefinition Width="50"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="20"/>
						<ColumnDefinition Width="20"/>
					</Grid.ColumnDefinitions>
					<Rectangle x:Name="ParticipantRct" Fill="{DynamicResource PrimaryHueMidBrush}"
                               Visibility="Hidden"/>
					<!--Pic-->
					<Grid Grid.Column="1" Margin="6" SnapsToDevicePixels="True">
						<Grid.OpacityMask>
							<VisualBrush Visual="{Binding ElementName=ClipEllipse}"/>
						</Grid.OpacityMask>
						<Ellipse x:Name="ClipEllipse" Fill="White"/>
						<materialDesign:PackIcon Kind="AccountCircle" SnapsToDevicePixels="True" Width="Auto" Height="Auto"
                                                 Margin="-4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
						<Image Source="{Binding Photo, Converter={StaticResource ByteBmpSrcConverter},
                            TargetNullValue={StaticResource BlankImage}}" Stretch="UniformToFill"/>
					</Grid>
					<!--Name-->
					<TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"
                               Margin="5,0" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"
                               Text="{Binding Name}" SnapsToDevicePixels="True"/>
					<Button Grid.Column="4" Foreground="#FF6E6E6E"
                                Style="{DynamicResource AddButtonStyle}"
                                HorizontalAlignment="Right"
				                Command="{Binding DataContext.SendRequestCommand, ElementName=root}"/>
				</Grid>
			</Border>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding Path=IsSelected,
                    RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="true">
					<Setter Property="Visibility" TargetName="ParticipantRct" Value="Visible"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
	</metro:MetroWindow.Resources>
	
	
	<Grid >
		<Grid.RowDefinitions>
			<RowDefinition Height="50"/>
			<RowDefinition/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<TextBox Grid.Column="1" x:Name="searchUsername" Margin="20, 10, 50, 10"
                                 materialDesign:HintAssist.Hint="Search for a friend" HorizontalAlignment="Stretch"   
                                 Text="{Binding SearchUsername, UpdateSourceTrigger=PropertyChanged}"/>
		<Button Grid.Column="1" Foreground="#FF6E6E6E" Margin="4"
                                Style="{DynamicResource SearchButtonStyle}"
                                HorizontalAlignment="Right"
				Command="{Binding SearchCommand}"/>
		<Border Grid.Row="1" BorderThickness="1,1,1,1" SnapsToDevicePixels="True"
                BorderBrush="{DynamicResource MaterialDesignDivider}">
			<ListBox x:Name="root" ItemsSource="{Binding Participants}" 
                     ItemTemplate="{DynamicResource ParticipantsDataTemplate}"
                     ItemContainerStyle="{DynamicResource ParticipantsListBoxItemStyle}"
                     SelectedItem="{Binding SelectedParticipant}"                     
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"/>
		</Border>
	</Grid>
</metro:MetroWindow>
